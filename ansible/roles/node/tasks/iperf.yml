- name: WireGuard | Consolidate host facts
  ansible.builtin.import_role:
    name: wireguard_facts
  tags:
    - node
    - node_iperf
    - iperf3
    - wireguard
    - wg_facts

- name: Iperf3 | Install server package
  when: node_iperf_enable | bool
  ansible.builtin.package:
    name: iperf3
    state: present
  tags: [node_iperf, iperf3]

- name: Iperf3 | Mask vendor iperf3.service (conflicts with instance binding)
  when: node_iperf_enable | bool
  ansible.builtin.systemd:
    name: iperf3.service
    state: stopped
    enabled: false
    masked: true
  tags: [node_iperf, iperf3]

# Если bind IP явно задан в vars — используем его; иначе берём wg_ip (если есть)
- name: Node | Compute effective bind IP for iperf3
  ansible.builtin.set_fact:
    node_iperf_bind_ip_effective: >-
      {{
        (node_iperf_bind_ip is defined and (node_iperf_bind_ip | length) > 0)
        | ternary(node_iperf_bind_ip,
                  (wg_ip | default('')))
      }}
  tags: [node, node_iperf, iperf3]

- name: Iperf3 | Deploy templated systemd unit
  when: node_iperf_enable | bool
  ansible.builtin.template:
    src: iperf3@.service.j2
    dest: /etc/systemd/system/iperf3@.service
    mode: "0644"
  tags: [node_iperf, iperf3]

- name: Iperf3 | Systemd daemon-reload
  when: node_iperf_enable | bool
  ansible.builtin.systemd:
    daemon_reload: true
  tags: [node_iperf, iperf3]

- name: Iperf3 | Enable & start iperf3@{{ node_iperf_port }}
  when: node_iperf_enable | bool
  ansible.builtin.systemd:
    name: "iperf3@{{ node_iperf_port }}"
    enabled: true
    state: started
  tags: [node_iperf, iperf3]

- name: Iperf3 | Detect ufw
  when:
    - node_iperf_enable | bool
    - firewall_ufw_manage | bool
  ansible.builtin.stat:
    path: /usr/sbin/ufw
  register: iperf_ufw
  tags: [node_iperf, iperf3]

# --- Resolve hub WG IP for firewall rules ---
- name: Iperf3 | Assert hub WG IP is known
  when:
    - node_iperf_enable | default(false) | bool
    - firewall_ufw_manage | default(false) | bool
    - node_iperf_ufw_from_hub_only | default(true) | bool
    - iperf_ufw is defined
    - iperf_ufw.stat.exists
  ansible.builtin.assert:
    that:
      - hub_wg_ip_effective is defined
      - (hub_wg_ip_effective | length) > 0
    fail_msg: >
      Cannot resolve hub WG IP. Define `hub_wg_ip` in group_vars/all.yml (recommended),
      or set `hub_wg_ip`/`wg_ip` for the host in group 'hub'.
  tags: [node_iperf, iperf3]

- name: Iperf3 | Configure ufw allowances
  when:
    - node_iperf_enable | default(false) | bool
    - firewall_ufw_manage | default(false) | bool
    - iperf_ufw is defined
    - iperf_ufw.stat.exists
  ansible.builtin.include_role:
    name: ufw_firewall
  vars:
    ufw_firewall_rules: >-
      {{
        (node_iperf_ufw_from_hub_only | bool)
        | ternary(
            [
              {
                'rule': 'allow',
                'proto': 'tcp',
                'port': node_iperf_port | string,
                'from_ip': hub_wg_ip_effective ~ '/32',
                'comment': 'iperf3 server (bind ' ~ (node_iperf_bind_ip_effective | default('0.0.0.0')) ~ ')'
              }
            ],
            [
              {
                'rule': 'allow',
                'proto': 'tcp',
                'port': node_iperf_port | string,
                'from_ip': wg_subnet_cidr,
                'comment': 'iperf3 server (bind ' ~ (node_iperf_bind_ip_effective | default('0.0.0.0')) ~ ')'
              }
            ]
          )
      }}
  tags: [node_iperf, iperf3]

# # --- Firewall allowances for iperf3 over WG ---
# - name: Iperf3 | Allow tcp/5201 from hub WG IP
#   when: node_iperf_enable | bool
#   ansible.builtin.iptables:
#     chain: INPUT
#     source: "{{ hub_wg_ip_effective }}/32"
#     protocol: tcp
#     destination_port: "{{ node_iperf_port }}"
#     jump: ACCEPT
#     state: present
#   tags: [node_iperf, iperf3]

# - name: Iperf3 | Allow tcp/5201 via wgmon0 (fallback)
#   when: node_iperf_enable | bool
#   ansible.builtin.command: >
#     iptables -C INPUT -i wgmon0 -p tcp --dport {{ node_iperf_port }} -j ACCEPT
#     || iptables -I INPUT 1 -i wgmon0 -p tcp --dport {{ node_iperf_port }} -j ACCEPT
#   register: ipt_allow_wg
#   changed_when: ipt_allow_wg.rc == 0
#   failed_when: false
#   tags: [node_iperf, iperf3]
